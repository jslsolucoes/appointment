id: 'cancelAppointment'
type: 'node'
before:
   - type: 'http-request'
     method: 'delete'
     url: > 
            (js)=> return `http://localhost:8081/appointments/${context.idAppointmentToCancel}`;
     putOnContextAs: 'canceledAppointmentResponse'
   - type: 'mail'
     provider: 'botMailer'
     subject: (js) => return `Cancelamento de agendamento`;
     message: (js) => return `Olá ${context.fullName}, seu agendamento marcado para a data de ${new Date(context.canceledAppointmentResponse.body.dateTime).toLocaleString('pt-BR')} foi cancelado com sucesso`;
     to:
        - (js) => return context.email;
     execute: (js) -> return context.canceledAppointmentResponse.statusCode === 200;
   - type: 'sms'
     provider: 'botSms'
     message: (js) => return `Olá ${context.fullName}, seu agendamento marcado para a data de ${new Date(context.canceledAppointmentResponse.body.dateTime).toLocaleString('pt-BR')} foi cancelado com sucesso`;
     to:
        - (js) => return '+55' + context.phone;
     execute: (js) -> return context.canceledAppointmentResponse.statusCode === 200;
   - type: 'wpp'
     provider: 'botWpp'
     message: (js) -> return `Ola cancelamento em ${new Date(context.canceledAppointmentResponse.body.dateTime).toLocaleString('pt-BR')}, seja bem vindo a nossa empresa.`;
     to:
        - (js) => return '+55' + context.phone;
     execute: (js) -> return context.canceledAppointmentResponse.statusCode === 200;       
transition: auto
hasNext: true
next: 'welcome'